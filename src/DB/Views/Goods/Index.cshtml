@using System.Threading.Tasks
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model IEnumerable<DB.Models.Good>
@inject IAuthorizationService AuthorizationService

@{
  ViewData["Title"] = "Товары";
}

<h2>Index</h2>
@if (await AuthorizationService.AuthorizeAsync(User, "AdministratorOnly"))
{
<p>
    <a asp-action="Create">Добавить товар</a>
</p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            @if (await AuthorizationService.AuthorizeAsync(User, "AdministratorOnly"))
            {
            <td>
                <a asp-action="Edit" asp-route-id="@item.GoodID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.GoodID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.GoodID">Delete</a> |
                <a asp-action="AddToCart" asp-route-id="@item.GoodID">Добавить в корзину</a>
            </td>
            }
            else
            {
            <td>
                <a asp-action="Details" asp-route-id="@item.GoodID">Подробнее</a> |
                <a asp-action="AddToCart" asp-route-id="@item.GoodID">Добавить в корзину</a>
            </td>
            }
        </tr>
        }
    </tbody>
</table>
